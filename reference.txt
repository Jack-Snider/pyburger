============================ Django의 디자인 패턴 ============================
본격적으로 Django 프로젝트를 시작해보기 전에 Django에서 코드를 분리하는 단위에 대해 알아본다.
처음 보는 용어가 많겠지만 '소프트웨어 개발에는 이런 개념도 있구나' 하는 느낌으로 가볍게 읽으며
넘어가자.
========================================================================

============================== [ 디자인 패턴 ] ==============================
소프트웨어 디자인 패턴( software design pattern )은 소프트웨어를 개발할 떄 공통적으로 발생하는 문제들을
해결하기 위한, 재사용 가능한 해결책이다. 실제 코드를 말하는 것은 아니며 코드를 작성하기 위한 일종의 서식이다.
=======================================================================

================================= [ MTV 패턴 ] =================================
모델 - 템플릿 - 뷰( Model - Template - View )는 디자인 패턴의 일종이며, Django에서 역할에 따라 코드를 분리하는
가이드로 사용한다.

2023.04.01
----------------------------- [ Model ] -----------------------------
모델( Model )은 Django와 데이터베이스를 연결시켜주는 코드이며 데이터의 형태를 나타낸다. 일반적으로 각각의 모델은
데이터베이스 테이블과 매핑된다.

모델은 다음 속성들을 가진다.
● 파이썬의 클래스를 사용하며, 모든 Model클래스는 django.db.models.Model 클래스를 상속받는다.
● 각각의 모델 속성은 데이터베이스 필드를 나타낸다.

파일명은 기본값으로 models.py를 사용한다.

예시 )
class DjangoModel( models.Model ):
	name = models.CharField( "이름 " )
---------------------------------------------------------------------
----------------------------- [ Template ] -----------------------------
템플릿( Template )은 웹 브라우저로 돌려줄 코드이며, 사용자에게 제공될 결과물의 형태를 나타낸다.
HTML을 사용해서 나타내며, Django에서는 templates 디렉터리 내에 HTML파일을 사용한다.

예시 templates/sample.html )
<!DOCTYPE html>
<html lang = "ko">
	<body>
		<h1>DjangoTemplate</h1>
	</body>
</html>
-------------------------------------------------------------------------

----------------------------- [ View ] -----------------------------
View는 사용자의 요청을 받아 처리하는 웹 사이트의 로직을 가지는 코드이다. 파이썬의 함수( Function )를 사용한다.
파일명은 기본값으로 views.py를 사용한다.

def django_view( request ):
	return HttpResponse( "Django View" )
-------------------------------------------------------------------

Tips _ MTV와 MVC패턴
Django의 MTV패턴은 유명한 소프트웨어 디자인 패턴인 모델 - 뷰 - 컨트롤러( Model - View - Controller, MVC )와 같은
패턴이며, 부르는 명칭에만 차이가 있다.
● MVC의 View → MTV의 Template
● MVC의 Controller → MTV의 View
각각의 패턴에서 View가 의미하는 바가 다름에 주의하자.

==========================================================================